{"version":3,"sources":["bg.png","context/message.context/message.types.ts","context/message.context/message.reducer.ts","context/message.context/Message.provider.tsx","context/word.context/Word.types.ts","context/word.context/word.reducer.ts","context/word.context/Word.provider.tsx","utils/theme.ts","components/layout/GlobalStyles.tsx","components/styles/utils/helpers.tsx","utils/helpers.ts","components/styles/Buttons.tsx","components/layout/nav/Styles.nav.tsx","components/layout/nav/Nav.list.tsx","components/layout/nav/index.tsx","components/layout/index.tsx","hooks/useKeyEvent.tsx","components/hangman/Styles.tsx","components/hangman/index.tsx","components/message/Message.styles.tsx","components/message/index.tsx","components/modal/Modal.styles.tsx","components/modal/index.tsx","components/styles/Wrappers.tsx","components/words/Words.styles.tsx","components/words/UsedLetters.tsx","components/words/Word.tsx","components/words/WrongWords.tsx","components/game/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initialState","haveUsed","isWinner","resentTypedKey","state","action","type","payload","Error","MessageStateContext","React","undefined","MessageDispatchContext","MessageProvider","children","messageReducer","dispatch","Provider","value","useMessageDispatch","context","gameWord","usedLetters","wrongLetters","isLoser","WordStateContext","WordContextDispatch","WordProvider","wordReducer","useWordState","useWordDispatch","mainTheme","appSize","colors","primary","text","mainBg","danger","warning","primaryShadow","secondaryShadow","size","h1","h2","h3","h4","h5","p","a","maxWidth","shadow","elevations","transition","mainTransition","secondaryTransition","quickTransition","secondaryTheme","createGlobalStyle","props","theme","small","medium","large","xLarge","typedKeys","obj","Object","keys","handleFlex","reduce","acc","label","css","direction","justifyContent","alignItems","randomValue","list","Math","floor","random","length","wordsXs","Button","styled","button","StyledNavList","ul","ListBtn","ToggleThemeWrapper","div","Knob","animated","NavList","isDark","setIsDark","useSpring","x","textAlign","onClick","wordForTheGame","localStorage","setItem","String","className","style","transform","interpolate","Page","Main","main","Layout","stored","getItem","GlobalStyles","useKeyEvent","letter","setLetter","handleKeyEvent","event","keyCode","key","window","addEventListener","removeEventListener","HangmanStyles","svg","HangMan","console","log","width","height","x1","y1","x2","y2","cx","cy","r","MessageStyles","section","Message","useMessageState","includes","setTimeout","opacity","ModalStyles","ModalBody","Modal","y","GameStyles","WordContainer","WordsStyles","bg","WrongWordContainer","WordLetter","span","UsedLettersContainer","UsedLetters","map","i","split","Word","selectedWords","filter","w","join","checkString","WrongWords","wrongLetters2","item","index","indexOf","Game","dispatchMessage","data-testid","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.244a63fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.af4824cd.png\";","export type State = {\n  haveUsed: boolean;\n  isWinner: boolean;\n  resentTypedKey: string;\n};\n\nexport type Dispatch = (action: Action) => void;\n\nexport const initialState: State = {\n  haveUsed: false,\n  isWinner: false,\n  resentTypedKey: '', // letter for  comparing  in our warning message Message.tsx\n};\n\ninterface SetHaveUsedLetterMessage {\n  type: 'TOGGLE_USED_LETTER';\n}\ninterface SetIsWinner {\n  type: 'SET_IS_WINNER';\n}\ninterface SetResentTypedLetter {\n  type: 'SET_RESENT_TYPED_LETTER';\n  payload: string;\n}\n\nexport type Action =\n  | SetHaveUsedLetterMessage\n  | SetIsWinner\n  | SetResentTypedLetter;\n","import { State, Action, initialState } from './message.types';\n\nexport default (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    case 'TOGGLE_USED_LETTER':\n      return {\n        ...state,\n        haveUsed: !state.haveUsed,\n      };\n    case 'SET_IS_WINNER':\n      return {\n        ...state,\n        isWinner: !state.isWinner,\n      };\n\n    case 'SET_RESENT_TYPED_LETTER':\n      return {\n        ...state,\n        resentTypedKey: action.payload,\n      };\n    default: {\n      throw new Error(`Unable Action Type`);\n    }\n  }\n};\n","import * as React from 'react';\nimport messageReducer from './message.reducer';\nimport { Dispatch, State, initialState } from './message.types';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst MessageStateContext = React.createContext<State | undefined>(undefined);\nconst MessageDispatchContext = React.createContext<Dispatch | undefined>(\n  undefined,\n);\n\nconst MessageProvider: React.FC<Props> = ({ children }) => {\n  const [state, dispatch] = React.useReducer(messageReducer, initialState);\n\n  return (\n    <MessageStateContext.Provider value={state}>\n      <MessageDispatchContext.Provider value={dispatch}>\n        {children}\n      </MessageDispatchContext.Provider>\n    </MessageStateContext.Provider>\n  );\n};\n\nconst useMessageState = () => {\n  const context = React.useContext(MessageStateContext);\n  if (context === undefined) {\n    throw new Error('MessageState need to bee wrapped inside MessageProvider');\n  }\n  return context;\n};\nconst useMessageDispatch = () => {\n  const context = React.useContext(MessageDispatchContext);\n  if (context === undefined) {\n    throw new Error(\n      'MessageDispatch need to bee wrapped inside MessageProvider',\n    );\n  }\n  return context;\n};\n\nexport { MessageProvider, useMessageState, useMessageDispatch };\n","export type Dispatch = (action: Action) => void;\n\nexport type State = {\n  gameWord: string;\n  usedLetters: string[];\n  wrongLetters: string[];\n  isWinner: boolean;\n  isLoser: boolean;\n};\n\nexport const initialState: State = {\n  gameWord: '',\n  usedLetters: [],\n  wrongLetters: [],\n  isWinner: false,\n  isLoser: false,\n};\n\n// Start the game with setting the first random word to guess\ninterface SetGameWord {\n  type: 'SET_GAME_WORD';\n  payload: string;\n}\n\n// dispatch to correct words list\ninterface SetUsedWord {\n  type: 'SET_CORRECT_WORD';\n  payload: string;\n}\n\n// dispatch to wrong words list\ninterface SetWrongWord {\n  type: 'SET_WRONG_WORD';\n  payload: string;\n}\ninterface ClearGameWord {\n  type: 'CLEAR_GAME_WORD';\n}\ninterface ClearUsedWordWrong {\n  type: 'CLEAR_USED_WORD_LIST';\n}\ninterface ClearWrongWordList {\n  type: 'CLEAR_WRONG_WORD_LIST';\n}\ninterface SetWinner {\n  type: 'SET_WINNER';\n}\ninterface SetLooser {\n  type: 'SET_LOOSER';\n}\n\nexport type Action =\n  | SetUsedWord\n  | SetWrongWord\n  | SetGameWord\n  | ClearGameWord\n  | SetWinner\n  | ClearUsedWordWrong\n  | ClearWrongWordList\n  | SetLooser;\n","import { Action, initialState, State } from './Word.types';\n\nexport default (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    case 'SET_GAME_WORD':\n      return {\n        ...state,\n        gameWord: action.payload,\n      };\n\n    case 'SET_CORRECT_WORD':\n      return {\n        ...state,\n        usedLetters: [...state.usedLetters, action.payload],\n      };\n\n    case 'SET_WRONG_WORD':\n      return {\n        ...state,\n        wrongLetters: [...state.wrongLetters, action.payload],\n      };\n\n    case 'CLEAR_GAME_WORD':\n      return {\n        ...state,\n        gameWord: '',\n        isWinner: false,\n        isLoser: false,\n      };\n\n    case 'SET_WINNER':\n      return {\n        ...state,\n        isWinner: !state.isWinner,\n      };\n\n    case 'CLEAR_USED_WORD_LIST':\n      return {\n        ...state,\n        usedLetters: [],\n        isWinner: false,\n        isLoser: false,\n      };\n    case 'CLEAR_WRONG_WORD_LIST':\n      return {\n        ...state,\n        wrongLetters: [],\n        isWinner: false,\n        isLoser: false,\n      };\n\n    case 'SET_LOOSER':\n      return {\n        ...state,\n        isLoser: true,\n      };\n\n    default: {\n      throw new Error(`Unable Action Type`);\n    }\n  }\n};\n","import * as React from 'react';\nimport wordReducer from './word.reducer';\nimport { Dispatch, initialState, State } from './Word.types';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst WordStateContext = React.createContext<State | undefined>(undefined);\nconst WordContextDispatch = React.createContext<Dispatch | undefined>(\n  undefined,\n);\n\nconst WordProvider: React.FC<Props> = ({ children }) => {\n  const [state, dispatch] = React.useReducer(wordReducer, initialState);\n  return (\n    <WordStateContext.Provider value={state}>\n      <WordContextDispatch.Provider value={dispatch}>\n        {children}\n      </WordContextDispatch.Provider>\n    </WordStateContext.Provider>\n  );\n};\n\nconst useWordState = () => {\n  const context = React.useContext(WordStateContext);\n  if (context === undefined) {\n    throw new Error('WordState need to bee wrapped inside WordProvider');\n  }\n  return context;\n};\n\nconst useWordDispatch = () => {\n  const context = React.useContext(WordContextDispatch);\n  if (context === undefined) {\n    throw new Error('WordState need to bee wrapped inside WordProvider');\n  }\n  return context;\n};\n\nexport { WordProvider, useWordDispatch, useWordState };\n","import { DefaultTheme } from 'styled-components';\n\nexport const mainTheme: DefaultTheme = {\n  appSize: '10px',\n  colors: {\n    primary: 'rgba(21,101,192,1)',\n    text: '#fff',\n    mainBg: 'rgba(38,50,56,.8)',\n    danger: '#E53935',\n    warning: '#FFEE58',\n    primaryShadow: 'rgba(21,101,192,.7)',\n    secondaryShadow: 'rgba(0,0,0,0.5)',\n  },\n  size: {\n    h1: '50px',\n    h2: '40px',\n    h3: '30px',\n    h4: '27px',\n    h5: '22px',\n    p: '18px',\n    a: '16px',\n    maxWidth: '1200px',\n  },\n  shadow: {\n    elevations: [\n      'box-shadow: inset 0 7px 9px -7px rgba(0,0,0, 0.7)',\n      'box-shadow: 0 1px 3px rgba(0,0,0, 0.12), 0 1px 2px rgba(0,0,0, 0.24)',\n      'box-shadow: 0 3px 6px rgba(0,0,0, 0.16), 0 3px 6px rgba(0,0,0, 0.23)',\n      'box-shadow: 3px 2px rgba(42, 43, 49,.3)',\n    ],\n  },\n  transition: {\n    mainTransition: 'all .3s linear',\n    secondaryTransition: 'all 1s ease',\n    quickTransition: 'all 200ms ease-in-out',\n  },\n};\n\nexport const secondaryTheme: DefaultTheme = {\n  appSize: '10px',\n  colors: {\n    primary: 'rgba(220,231,117,1)',\n    text: '#333',\n    mainBg: '#fff',\n    danger: '#E53935',\n    warning: '#FFEE58',\n    primaryShadow: 'rgba(220,231,117,.7))',\n    secondaryShadow: 'rgba(0,0,0,0.5)',\n  },\n  size: {\n    h1: '50px',\n    h2: '40px',\n    h3: '30px',\n    h4: '27px',\n    h5: '22px',\n    p: '18px',\n    a: '16px',\n    maxWidth: '1200px',\n  },\n  shadow: {\n    elevations: [\n      'box-shadow: inset 0 7px 9px -7px rgba(0,0,0, 0.7)',\n      'box-shadow: 0 1px 3px rgba(0,0,0, 0.12), 0 1px 2px rgba(0,0,0, 0.24)',\n      'box-shadow: 0 3px 6px rgba(0,0,0, 0.16), 0 3px 6px rgba(0,0,0, 0.23)',\n      'box-shadow: 3px 2px rgba(42, 43, 49,.3)',\n    ],\n  },\n  transition: {\n    mainTransition: 'all .3s linear',\n    secondaryTransition: 'all 1s ease',\n    quickTransition: 'all 200ms ease-in-out',\n  },\n};\n","import { createGlobalStyle } from 'styled-components';\nimport { handleFlex } from '../styles/utils/helpers';\n\nexport default createGlobalStyle`\n  *::before,\n  *::after\n  ,* {\n      margin: 0;\n      padding: 0;\n      box-sizing: inherit;\n    }\n\n    html {\n      font-size: ${(props) => props.theme.appSize};\n      font-family: 'Montserrat', sans-serif;\n    }\n\n    body {\n      box-sizing: border-box;\n      font-family: 'Montserrat', sans-serif;\n      padding: 0;\n      margin: 0;\n      line-height: 2;\n    }\n\n    ul{\n      list-style:none;\n    }\n\n    a {\n    text-decoration: none;\n    color: ${(props) => props.theme.colors.primary};\n    font-size: ${(props) => props.theme.size.a};\n    }\n    h1{\n      font-size: ${(props) => props.theme.size.h1};\n    }\n    h2{\n      font-size: ${(props) => props.theme.size.h2};\n    }\n    h3{\n      font-size: ${(props) => props.theme.size.h3};\n    }\n    p{\n      font-size: ${(props) => props.theme.size.p};\n    }\n\n`;\n","import { css } from 'styled-components';\n\ninterface Size {\n  small: number;\n  medium: number;\n  large: number;\n  xLarge: number;\n}\n\nconst size: Size = {\n  small: 500,\n  medium: 960,\n  large: 1140,\n  xLarge: 1400,\n} as const;\n\ntype CssParams = Parameters<typeof css>;\ntype StyleFnMap = Record<keyof Size, (...args: CssParams) => any>;\n\nconst typedKeys = <T extends {}>(obj: T) => Object.keys(obj) as Array<keyof T>;\n\nconst below = typedKeys(size).reduce((acc, label: keyof Size) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${size[label] / 16}em) {\n      ${css(...args)}\n    }\n  `;\n  return acc;\n}, {} as StyleFnMap);\n\n/* Object.keys() is typed as `string[]`. This function lets use slightly better typing. */\nconst above = typedKeys(size).reduce((acc, label: keyof Size) => {\n  acc[label] = (...args) => css`\n    @media (min-width: ${size[label] / 16}em) {\n      ${css(...args)}\n    }\n  `;\n  return acc;\n}, {} as StyleFnMap);\n\ntype FlexDirection = 'column' | 'column-reverse' | 'row' | 'row-reverse';\ntype JustifyContent =\n  | 'center'\n  | 'end'\n  | 'flex-end'\n  | 'flex-start'\n  | 'space-around'\n  | 'space-between'\n  | 'space-evenly';\ntype AlignItems = 'center' | 'end' | 'flex-end' | 'flex-start' | 'stretch';\n\nconst handleFlex = (\n  direction: FlexDirection,\n  justifyContent: JustifyContent,\n  alignItems: AlignItems,\n) => {\n  return css`\n    display: flex;\n    flex-direction: ${direction};\n    justify-content: ${justifyContent};\n    align-items: ${alignItems};\n  `;\n};\n\nexport { handleFlex, below, above };\n","export function randomValue<T>(list: T[]): T {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nexport const wordsXs: string[] = [\n  'javascript',\n  'haskell',\n  'golang',\n  'elda',\n  'lisp',\n  'reason',\n];\n\nexport const checkString = (\n  gameWord: string,\n  selectedWords: string[],\n): boolean => {\n  if (gameWord) {\n    let prefix = gameWord\n      .split('')\n      .filter((w) => selectedWords.includes(w))\n      .join('');\n\n    return prefix === gameWord;\n  }\n  return false;\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: block;\n  margin: 1.5rem auto;\n  font-size: 1.6rem;\n  width: 18rem;\n  border: 2px solid ${({ theme: { colors } }) => colors.text};\n  background: transparent;\n  padding: 0.5rem 0.8rem;\n  border-radius: 1rem;\n  ${(props) => props.theme.shadow.elevations[2]};\n  cursor: pointer;\n  color: ${({ theme: { colors } }) => colors.text};\n  transition: ${(props) => props.theme.transition.mainTransition};\n  &:hover {\n    background: ${({ theme: { colors } }) => colors.primary};\n    ${(props) => props.theme.shadow.elevations[1]};\n    text-transform: capitalize;\n    width: 17rem;\n  }\n  &:active {\n    position: relative;\n    top: 8px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Button } from '../../styles/Buttons';\nimport { handleFlex } from '../../styles/utils/helpers';\nimport { animated } from 'react-spring';\n\nexport const StyledNavList = styled.ul`\n  ${handleFlex('row', 'space-between', 'center')};\n\n  flex: 1;\n`;\n\nexport const ListBtn = styled(Button)`\n  color: ${({ theme }) => theme.colors.text};\n  border: 2px solid ${({ theme }) => theme.colors.primary};\n  margin: 0;\n  &:hover {\n    color: ${({ theme }) => theme.colors.text};\n  }\n`;\n\ntype ToggleType = {\n  isDark: boolean;\n};\n\nexport const ToggleThemeWrapper = styled.div<ToggleType>`\n  ${handleFlex('row', 'space-between', 'center')};\n  padding: 0 3rem;\n  .slide {\n    width: 15rem;\n  }\n`;\n\nexport const Knob = styled(animated.div)`\n  border: 2px solid ${(props) => props.theme.colors.secondaryShadow};\n  background: ${(props) => props.theme.colors.secondaryShadow};\n  border-radius: 1rem;\n  width: 70%;\n  height: 4rem;\n  display: block;\n  font-size: 2rem;\n  cursor: pointer;\n  padding: 0 0.3rem;\n`;\n","import * as React from 'react';\nimport { useSpring } from 'react-spring';\nimport {\n  useWordDispatch,\n  useWordState,\n} from '../../../context/word.context/Word.provider';\nimport { randomValue, wordsXs } from '../../../utils/helpers';\n\nimport { StyledNavList, ListBtn, ToggleThemeWrapper, Knob } from './Styles.nav';\n\ninterface Props {\n  isDark: boolean;\n  setIsDark: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst NavList: React.FC<Props> = ({ isDark, setIsDark }) => {\n  const { gameWord } = useWordState();\n  const dispatch = useWordDispatch();\n\n  const booleanToString = (b: boolean): string => {\n    return String(b);\n  };\n\n  const { x, textAlign } = useSpring({\n    x: isDark ? 0 : 40,\n    textAlign: isDark ? 'left' : 'right',\n  });\n\n  return (\n    <StyledNavList>\n      {gameWord ? (\n        <ListBtn\n          onClick={() => {\n            dispatch({ type: 'CLEAR_GAME_WORD' });\n            dispatch({ type: 'CLEAR_USED_WORD_LIST' });\n            dispatch({ type: 'CLEAR_WRONG_WORD_LIST' });\n          }}>\n          New Game\n        </ListBtn>\n      ) : (\n        <ListBtn\n          onClick={() => {\n            let wordForTheGame = randomValue(wordsXs);\n            dispatch({ type: 'SET_GAME_WORD', payload: wordForTheGame });\n          }}>\n          Start Game\n        </ListBtn>\n      )}\n      <ToggleThemeWrapper\n        isDark={isDark}\n        onClick={() => {\n          setIsDark(!isDark);\n          localStorage.setItem('isDark', booleanToString(!isDark));\n        }}>\n        <div className='slide'>\n          <Knob\n            style={{\n              transform: x.interpolate((x) => `translate3d(${x * 1}px, 0, 0)`),\n              textAlign,\n            }}>\n            {isDark ? ' 🌞' : '🌒'}\n          </Knob>\n        </div>\n      </ToggleThemeWrapper>\n    </StyledNavList>\n  );\n};\nexport default NavList;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { handleFlex } from '../../styles/utils/helpers';\nimport NavList from './Nav.list';\n\ninterface Props {\n  className: string;\n  isDark: boolean;\n  setIsDark: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Nav: React.FC<Props> = ({ className, isDark, setIsDark }) => {\n  return (\n    <nav className={className}>\n      <div className='title'>\n        <h3>Hangman Game</h3>\n      </div>\n      <NavList isDark={isDark} setIsDark={setIsDark} />\n    </nav>\n  );\n};\nexport default styled(Nav)`\n  padding: 2rem 1rem;\n  background: ${(props) => props.theme.colors.mainBg};\n  height: calc(12rem - 2rem);\n  ${handleFlex('row', 'space-evenly', 'center')};\n  .title {\n    flex: 1;\n  }\n`;\n","import * as React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { MessageProvider } from '../../context/message.context/Message.provider';\nimport { WordProvider } from '../../context/word.context/Word.provider';\nimport { mainTheme, secondaryTheme } from '../../utils/theme';\nimport GlobalStyles from './GlobalStyles';\nimport Nav from './nav';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const Page = styled.div`\n  background: ${({ theme: { colors } }) => colors.mainBg};\n  color: ${({ theme: { colors } }) => colors.text};\n  height: 100vh;\n`;\n\nconst Main = styled.main`\n  margin: 0 auto;\n  max-width: ${(props) => props.theme.size.maxWidth};\n`;\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  const stored = localStorage.getItem('isDark');\n  const [isDark, setIsDark] = React.useState(stored === 'true' ? true : false);\n\n  return (\n    <ThemeProvider theme={isDark ? secondaryTheme : mainTheme}>\n      <WordProvider>\n        <MessageProvider>\n          <GlobalStyles />\n          <Nav className='navbar' isDark={isDark} setIsDark={setIsDark} />\n          <Page>\n            <Main>{children}</Main>\n          </Page>\n        </MessageProvider>\n      </WordProvider>\n    </ThemeProvider>\n  );\n};\nexport default Layout;\n","import * as React from 'react';\n\nconst useKeyEvent = () => {\n  const [letter, setLetter] = React.useState<string>('');\n\n  const handleKeyEvent = (event: KeyboardEvent) => {\n    if (event.keyCode >= 65 && event.keyCode <= 90) {\n      setLetter(event.key);\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleKeyEvent);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyEvent);\n    };\n  });\n\n  return letter;\n};\n\nexport default useKeyEvent;\n","import styled from 'styled-components';\n\nexport const HangmanStyles = styled.svg`\n  width: 200;\n  height: 250;\n\n  fill: transparent;\n  stroke: ${(props) => props.theme.colors.text};\n  stroke-width: 4px;\n  stroke-linecap: round;\n  transition: ${(props) => props.theme.transition.secondaryTransition};\n  .figure-part {\n    transition: ${(props) => props.theme.transition.secondaryTransition};\n  }\n`;\n","import * as React from 'react';\nimport {\n  useWordDispatch,\n  useWordState,\n} from '../../context/word.context/Word.provider';\nimport { HangmanStyles } from './Styles';\n\ninterface Props {}\n\nconst HangMan: React.FC<Props> = () => {\n  const { wrongLetters } = useWordState();\n\n  const dispatch = useWordDispatch();\n  React.useEffect(() => {\n    console.log(wrongLetters.length);\n    if (wrongLetters.length === 6) {\n      dispatch({ type: 'SET_LOOSER' });\n    }\n  }, [dispatch, wrongLetters]);\n\n  return (\n    <HangmanStyles width='200' height='250'>\n      <line x1='60' y1='20' x2='140' y2='20' />\n      <line x1='140' y1='20' x2='140' y2='50' />\n      <line x1='60' y1='20' x2='60' y2='240' />\n      <line x1='20' y1='240' x2='100' y2='240' />\n\n      {/* head */}\n      {wrongLetters.length >= 1 && (\n        <circle cx='140' cy='70' r='20' className='figure-part' />\n      )}\n\n      {/* body */}\n      {wrongLetters.length >= 2 && (\n        <line\n          x1='140'\n          y1='90'\n          x2='140'\n          y2='150'\n          className='figure-part figure-part-two'\n        />\n      )}\n\n      {/* arms */}\n      {wrongLetters.length >= 3 && (\n        <line\n          x1='140'\n          y1='90'\n          x2='90'\n          y2='120'\n          className='figure-part figure-part-three'\n        />\n      )}\n      {wrongLetters.length >= 4 && (\n        <line\n          x1='140'\n          y1='90'\n          x2='190'\n          y2='120'\n          className='figure-part figure-part-four'\n        />\n      )}\n\n      {/* legs */}\n      {wrongLetters.length >= 5 && (\n        <line\n          x1='140'\n          y1='150'\n          x2='120'\n          y2='180'\n          className='figure-part figure-part-five'\n        />\n      )}\n      {wrongLetters.length >= 6 && (\n        <line\n          x1='140'\n          y1='150'\n          x2='160'\n          y2='180'\n          className='figure-part figure-part-six'\n        />\n      )}\n    </HangmanStyles>\n  );\n};\nexport default HangMan;\n","import { animated } from 'react-spring';\nimport styled from 'styled-components';\n\nexport const MessageStyles = styled(animated.section)`\n  background: ${({ theme }) => theme.colors.secondaryShadow};\n  padding: 2rem;\n  position: fixed;\n  top: 0;\n  /* transform: translate(-50%, -50%); */\n  padding: 3rem 5rem;\n  margin: 2rem auto;\n`;\n","import * as React from 'react';\nimport { useSpring } from 'react-spring';\nimport {\n  useMessageDispatch,\n  useMessageState,\n} from '../../context/message.context/Message.provider';\nimport { useWordState } from '../../context/word.context/Word.provider';\nimport { MessageStyles } from './Message.styles';\n\ninterface Props {}\n\nconst Message: React.FC<Props> = () => {\n  const { wrongLetters } = useWordState();\n  const dispatch = useMessageDispatch();\n  const { haveUsed, resentTypedKey } = useMessageState();\n\n  React.useEffect(() => {\n    if (wrongLetters.includes(resentTypedKey)) {\n      dispatch({ type: 'TOGGLE_USED_LETTER' });\n      setTimeout(() => {\n        dispatch({ type: 'TOGGLE_USED_LETTER' });\n      }, 2300);\n    }\n  }, [dispatch, resentTypedKey, wrongLetters]);\n\n  const { x, opacity } = useSpring({\n    x: haveUsed ? 0 : -1000,\n    opacity: haveUsed ? 1 : 0,\n  });\n\n  return (\n    <MessageStyles\n      style={{\n        transform: x.interpolate((x) => `translate3d(${x * 1}%,0,0)`),\n        opacity,\n      }}>\n      <h3>{resentTypedKey} is a wrong letter !!! 😂😱</h3>\n    </MessageStyles>\n  );\n};\nexport default Message;\n","import styled from 'styled-components';\nimport { animated } from 'react-spring';\nimport { handleFlex } from '../styles/utils/helpers';\n\nexport const ModalStyles = styled(animated.section)`\n  background: ${({ theme }) => theme.colors.primaryShadow};\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  ${handleFlex('row', 'center', 'center')};\n`;\n\nexport const ModalBody = styled.div`\n  background: ${({ theme }) => theme.colors.mainBg};\n  padding: 2rem 4rem;\n  height: 50%;\n  width: 50%;\n  ${handleFlex('column', 'center', 'center')};\n  box-shadow: ${(props) => props.theme.colors.primary} 2px 3px 5px;\n  border-radius: 0.3rem;\n`;\n","import * as React from 'react';\nimport { useSpring } from 'react-spring';\n\nimport {\n  useWordDispatch,\n  useWordState,\n} from '../../context/word.context/Word.provider';\nimport { Button } from '../styles/Buttons';\nimport { ModalStyles, ModalBody } from './Modal.styles';\n\ninterface Props {}\n\nconst Modal: React.FC<Props> = () => {\n  const { isWinner, isLoser } = useWordState();\n  const dispatch = useWordDispatch();\n\n  const { y, x } = useSpring({\n    y: isWinner ? 0 : 100,\n    x: isLoser ? 0 : 100,\n  });\n\n  React.useEffect(() => {\n    return () => {};\n  }, [isLoser, isWinner]);\n\n  return (\n    <>\n      {isWinner && (\n        <ModalStyles\n          style={{\n            transform: y.interpolate((y) => `translate3d(0,${y * -1}%,0)`),\n          }}>\n          <ModalBody>\n            <h1> Winner </h1>\n            <h3>You win the game</h3>\n\n            <Button\n              onClick={() => {\n                dispatch({ type: 'CLEAR_GAME_WORD' });\n                dispatch({ type: 'CLEAR_USED_WORD_LIST' });\n                dispatch({ type: 'CLEAR_WRONG_WORD_LIST' });\n              }}>\n              New game?\n            </Button>\n          </ModalBody>\n        </ModalStyles>\n      )}\n      {isLoser && (\n        <ModalStyles\n          style={{\n            transform: x.interpolate((x) => `translate3d(0,${x * -1}%,0)`),\n          }}>\n          <ModalBody>\n            <h1> Looser </h1>\n            <h3>You lose the game</h3>\n\n            <Button\n              onClick={() => {\n                dispatch({ type: 'CLEAR_GAME_WORD' });\n                dispatch({ type: 'CLEAR_USED_WORD_LIST' });\n                dispatch({ type: 'CLEAR_WRONG_WORD_LIST' });\n              }}>\n              New game?\n            </Button>\n          </ModalBody>\n        </ModalStyles>\n      )}\n    </>\n  );\n};\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ComponentWrapper = styled.div`\n  max-width: 1100px;\n  margin: 0 auto;\n`;\n\nexport const GameStyles = styled.div`\n  height: 100%;\n  position: relative;\n  margin: 0 auto;\n  padding: 3rem 1rem;\n`;\n","import styled from 'styled-components';\nimport { handleFlex } from '../styles/utils/helpers';\nimport bg from '../../bg.png';\nexport const WordContainer = styled.div`\n  padding: 2rem 1rem;\n  width: 100%;\n  margin: 12rem auto;\n  text-align: center;\n`;\n\nexport const WordsStyles = styled.ul`\n  padding: 2rem;\n  ${handleFlex('row', 'space-evenly', 'center')};\n  width: 80%;\n  margin: 1rem auto;\n  li {\n    padding: 1.5rem;\n    border: 2px solid ${(props) => props.theme.colors.text};\n    background-image: url(${bg});\n  }\n`;\n\nexport const WrongWordContainer = styled(WordContainer)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 20vmax;\n  margin: 0 auto;\n  border: 0;\n  h4 {\n    font-size: 3rem;\n  }\n`;\n\nexport const WordLetter = styled.span`\n  display: inline-block;\n  position: relative;\n  font-size: 1.6rem;\n  color: ${(props) => props.theme.colors.text};\n  padding: 0.5rem;\n  margin: 0.5rem 1.5rem;\n  line-height: 3em;\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    padding: 0.2rem;\n    height: 0.2rem;\n    background: ${(props) => props.theme.colors.primary};\n  }\n`;\n\nexport const UsedLettersContainer = styled(WordContainer)`\n  position: absolute;\n  top: 20%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 30vmax;\n  margin: 0 auto;\n  border: 0;\n  h4 {\n    font-size: 3rem;\n  }\n`;\n","import * as React from 'react';\nimport { useWordState } from '../../context/word.context/Word.provider';\nimport { UsedLettersContainer, WordLetter } from './Words.styles';\n\ninterface Props {}\n\nconst UsedLetters: React.FC<Props> = () => {\n  const { gameWord, usedLetters } = useWordState();\n\n  return (\n    <UsedLettersContainer>\n      {usedLetters.length > 0 && <h4>Used Letters</h4>}\n\n      {usedLetters.map((letter, i) =>\n        gameWord.split('').includes(letter) && usedLetters.includes(letter) ? (\n          <WordLetter key={i}>{letter}</WordLetter>\n        ) : null,\n      )}\n      {/* {usedLetters.map((letter, i) =>\n        gameWord.split('').includes(letter) ? (\n          <WordLetter key={i}>{letter}</WordLetter>\n        ) : null,\n      )} */}\n    </UsedLettersContainer>\n  );\n};\nexport default UsedLetters;\n","import * as React from 'react';\nimport {\n  useWordDispatch,\n  useWordState,\n} from '../../context/word.context/Word.provider';\nimport { checkString } from '../../utils/helpers';\nimport { WordContainer, WordLetter, WordsStyles } from './Words.styles';\n\ninterface Props {}\n\nconst Word: React.FC<Props> = () => {\n  const { gameWord, usedLetters } = useWordState();\n\n  const dispatch = useWordDispatch();\n\n  React.useEffect(() => {\n    let isAMatch = checkString(gameWord, usedLetters);\n    if (isAMatch) {\n      dispatch({ type: 'SET_WINNER' });\n    }\n    // console.log(checkString(gameWord, usedLetters));\n  }, [dispatch, gameWord, usedLetters]);\n\n  return (\n    <WordContainer>\n      <WordsStyles>\n        {gameWord.split('').map((letter, i) => (\n          <li key={i}>\n            <WordLetter>\n              {usedLetters.includes(letter) ? letter : ''}\n            </WordLetter>\n          </li>\n        ))}\n      </WordsStyles>\n    </WordContainer>\n  );\n};\nexport default Word;\n","import * as React from 'react';\nimport {\n  useWordDispatch,\n  useWordState,\n} from '../../context/word.context/Word.provider';\nimport { WordLetter, WrongWordContainer } from './Words.styles';\n\ninterface Props {}\n\nconst WrongWords: React.FC<Props> = () => {\n  const { wrongLetters } = useWordState();\n  const dispatch = useWordDispatch();\n\n  let wrongLetters2 = wrongLetters.filter(\n    (item, index) => wrongLetters.indexOf(item) === index,\n  );\n\n  React.useEffect(() => {\n    if (wrongLetters.length >= 6) {\n      dispatch({ type: 'SET_LOOSER' });\n    }\n  }, [dispatch, wrongLetters]);\n\n  return (\n    <WrongWordContainer>\n      {wrongLetters.length > 0 && <h4>Wrong-words </h4>}\n\n      {wrongLetters2.map((letter, index) => (\n        <WordLetter key={letter}>{letter}</WordLetter>\n      ))}\n    </WrongWordContainer>\n  );\n};\nexport default WrongWords;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport * as React from 'react';\nimport { useMessageDispatch } from '../../context/message.context/Message.provider';\nimport {\n  useWordDispatch,\n  useWordState,\n} from '../../context/word.context/Word.provider';\nimport useKeyEvent from '../../hooks/useKeyEvent';\nimport { randomValue, wordsXs } from '../../utils/helpers';\nimport HangMan from '../hangman';\nimport Message from '../message';\nimport Modal from '../modal';\nimport { Button } from '../styles/Buttons';\nimport { GameStyles } from '../styles/Wrappers';\nimport UsedLetters from '../words/UsedLetters';\nimport Word from '../words/Word';\nimport WrongWords from '../words/WrongWords';\n\ninterface Props {}\n\nconst Game: React.FC<Props> = () => {\n  const { gameWord, wrongLetters, usedLetters } = useWordState();\n\n  const key = useKeyEvent();\n\n  const dispatch = useWordDispatch();\n  const dispatchMessage = useMessageDispatch();\n\n  const startGame = (): void => {\n    let wordForTheGame = randomValue(wordsXs);\n    dispatch({ type: 'SET_GAME_WORD', payload: wordForTheGame });\n  };\n\n  const newGame = (): void => {\n    dispatch({ type: 'CLEAR_GAME_WORD' });\n    dispatch({ type: 'CLEAR_USED_WORD_LIST' });\n    dispatch({ type: 'CLEAR_WRONG_WORD_LIST' });\n  };\n\n  React.useEffect(() => {\n    // if (gameWord.includes(key) && !usedLetters.includes(key)) {\n    //   dispatch({ type: 'SET_CORRECT_WORD', payload: key });\n    //   // console.log('is a match with word ' + gameWord + ' letter ' + key);\n    // } else if (!gameWord.includes(key) && !wrongLetters.includes(key)) {\n    //   dispatch({ type: 'SET_WRONG_WORD', payload: key });\n    //   dispatchMessage({ type: 'SET_RESENT_TYPED_LETTER', payload: key });\n    //   // console.log('no match');\n    // }\n\n    if (gameWord.includes(key)) {\n      if (!usedLetters.includes(key)) {\n        dispatch({ type: 'SET_CORRECT_WORD', payload: key });\n      }\n    } else {\n      if (!wrongLetters.includes(key)) {\n        dispatch({ type: 'SET_WRONG_WORD', payload: key });\n        dispatchMessage({ type: 'SET_RESENT_TYPED_LETTER', payload: key });\n      }\n    }\n  }, [key]);\n\n  return (\n    <GameStyles>\n      <HangMan />\n      <UsedLetters />\n      <WrongWords />\n      <Word />\n      {!gameWord && (\n        <Button data-testid='startgame' onClick={startGame}>\n          Start Game\n        </Button>\n      )}\n      {gameWord && (\n        <Button data-testid='newgame' onClick={newGame}>\n          New Game\n        </Button>\n      )}\n      <Message />\n      <Modal />\n    </GameStyles>\n  );\n};\nexport default Game;\n","import React from 'react';\nimport Layout from './components/layout';\n\nimport Game from './components/game';\n\nfunction App() {\n  return (\n    <Layout>\n      <Game />\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}